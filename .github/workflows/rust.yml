name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test_bot:
    runs-on: ubuntu-latest
    needs: [test_db]
    steps:
    - uses: actions/checkout@v3
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: "7.0"
    - name: Test Bot
      run: cargo test -p rusty_bot
  
  test_web:
    runs-on: ubuntu-latest
    needs: [test_db]
    steps:
    - uses: actions/checkout@v3
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: "7.0"
    - name: Test Bot
      run: cargo test -p rusty_web
  
  test_db:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: "7.0"
    - name: Test Database Layer
      run: cargo test -p database

  build:
    runs-on: ubuntu-latest
    needs: [test_db, test_web, test_bot]
    steps:
    - uses: actions/checkout@v3
    - name: Build Bot (Release)
      run: cargo build --release -p rusty_bot
    - name: Build Web Backend (Release)
      run: cargo build --release -p rusty_web
    - name: Build Web Frontend
      working-directory: ./rusty-web/frontend
      run: npm run build

    - name: Collect Build Output
      run: |
        mkdir ./build_output
        cp ./target/release/rusty_bot ./build_output
        cp ./target/release/rusty_web ./build_output
        cp -r ./rusty-web/frontend/dist ./build_output/web_frontend
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Linux Release
        path: ./build_output/*
